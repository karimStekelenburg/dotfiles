#!/usr/bin/env bash

set -x

# ====== Variables =============================

declare -A gaps
declare -A color

gaps["top"]="10"
gaps["bottom"]="10"
gaps["left"]="10"
gaps["right"]="10"
gaps["inner"]="20"

color["focused"]="0xE0808080"
color["normal"]="0x00010101"
color["preselect"]="0xccFFFF00"




# ====== Notes =============================
# Stack the given window on top of the focused window
# yabai -m window --stack <window_id>
#
# Unstack the given window


# ====== Functions =============================

function focused_window_id() {
	return $(yabai -m query --windows --window | jq -r '.id')
}



# Uncomment to refresh ubersicht widget on workspace change
# Make sure to replace WIDGET NAME for the name of the ubersicht widget
#ubersicht_spaces_refresh_command="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"WIDGET NAME\"'"



# ============= DEBUG MODE ============= #
# yabai -m config debug_output on


# ===== Loading Scripting Additions ============
printf "yabai: loading scripting additions...\\n"
sudo yabai --load-sa
printf "yabai: configuration loaded...\\n"

# See: https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)#macos-big-sur---automatically-load-scripting-addition-on-startup
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# ===== Tiling setting =========================

yabai -m config layout bsp
yabai -m config window_animation_easing ease_in_sine
yabai -m config top_padding "${gaps["top"]}"
yabai -m config bottom_padding "${gaps["bottom"]}"
yabai -m config left_padding "${gaps["left"]}"
yabai -m config right_padding "${gaps["right"]}"
yabai -m config window_gap "${gaps["inner"]}"

yabai -m config window_topmost on
yabai -m config window_opacity on
yabai -m config window_shadow float

yabai -m config window_border on
yabai -m config window_border_width 7
# yabai -m config active_window_border_color  ${color["focused"]}
# yabai -m config normal_window_border_color  ${color["normal"]}
yabai -m config insert_feedback_color ${color["preselect"]}

yabai -m config split_ratio 0.90

yabai -m config auto_balance off

yabai -m config mouse_modifier alt
yabai -m config mouse_action1 move
yabai -m config mouse_action2 resize

yabai -m config mouse_follows_focus off
yabai -m config focus_follows_mouse autoraise

# Setup spaces
for _ in $(yabai -m query --spaces | jq '.[].index | select(. > 6)'); do
	yabai -m space --destroy 7
done

function setup_space {
	local idx="$1"
	local name="$2"
	local space=
	echo "setup space $idx : $name"

	space=$(yabai -m query --spaces --space "$idx")
	if [ -z "$space" ]; then
		yabai -m space --create
	fi

	yabai -m space "$idx" --label "$name"
}

setup_space 1 emacs
setup_space 2 web
setup_space 3 slack
setup_space 4 media
setup_space 5 other

yabai -m rule --add app="^(Safari|Finder|Todoist)$" manage=off
yabai -m rule --add app="^Emacs$" space=1
yabai -m rule --add app="^Brave Browser$" space=2
yabai -m rule --add app="^Slack$" space=3
yabai -m rule --add app="^Spotify$" space=4

# ===== Exclude Apps ===========================

# ===== Signals ================================
# configure sketchybar integration
yabai -m config external_bar all:40:0


# mouse support

# set mouse interaction modifier key (default: fn)
yabai -m config mouse_modifier fn

# set modifier + left-click drag to move window (default: move)
yabai -m config mouse_action1 resize

# set modifier + right-click drag to resize window (default: resize)
yabai -m config mouse_action2 resize

yabai -m config window_opacity on
yabai -m config active_window_opacity 1.0
yabai -m config normal_window_opacity 0.9

# mark window as scratchpad using rule and set size (scratchpad windows are manage=off automatically)
yabai -m rule --add app="^Spotify$" scratchpad=spotify grid=11:11:1:1:9:9

borders active_color=${color["preselect"]} inactive_color=${color["normal"]} width=10.0 style=round blur_radius=0.1 &

osascript -e 'display notification "Configuration reload" with title "yabai"'
